reps <- 1000
set.seed(1)
# replicate
df <- replicate(reps, sample(x = c(1, -1), replace = T, size = 100, prob = c(0.5, 0.5)))
# show dataframe values
head(df)
head(df)
?head
summary(df)
head(df[,5])
head(df[5,])
head(df[2])
head(df[, 1:10])
sum(sample(x = c(1, -1), replace = T, size = 10, prob = c(0.5, 0.5))))
sum(sample(x = c(1, -1), replace = T, size = 10, prob = c(0.5, 0.5)))
df <- replicate(reps, sum(sample(x = c(1, -1), replace = T, size = 100, prob = c(0.5, 0.5))))
head(df)
reps <- 1000
set.seed(1)
# simulate
df <- replicate(reps, sum(sample(x = c(1, -1), replace = T, size = 100, prob = c(0.5, 0.5))))
# show some sample values
head(df)
reps <- 1000
set.seed(1)
# simulate
df <- replicate(reps, sum(sample(x = c(1, -1), replace = T, size = 100, prob = c(0.5, 0.5))))
# show some sample values
head(df)
library(ggplot2)
ggplot(data.frame(df), aes(df)) +
geom_histogram(aes(y=..density..)) +
stat_function(fun=function(x)dgamma(x, shape=nexps, scale=1/rate),
color="red", size=2)
library(ggplot2)
ggplot(data.frame(df), aes(df)) +
geom_histogram(aes(y=..density..))
hist(df,
main="Histogram for +1 -1 Simulation",
xlab="Value of sum",
border="blue",
col="green",
xlim=c(0,100),
las=1,
breaks=5)
hist(df,
main="Histogram for +1 -1 Simulation",
xlab="Value of sum",
border="blue",
col="green",
xlim=c(-100,100),
las=1,
breaks=5)
hist(df,
main="Histogram for +1 -1 Simulation",
xlab="Value of sum",
border="blue",
col="green",
xlim=c(-50,50),
las=1,
breaks=5)
hist(df,
main="Histogram for +1 -1 Simulation",
xlab="Value of sum",
border="blue",
col="green",
xlim=c(-50,50),
las=1,
breaks=1)
hist(df,
main="Histogram for +1 -1 Simulation",
xlab="Value of sum",
border="blue",
col="green",
xlim=c(-50,50),
las=1,
breaks=1000)
hist(df,
main="Histogram for +1 -1 Simulation",
xlab="Value of sum",
border="blue",
col="green",
xlim=c(-50,50),
las=1,
breaks=100)
hist(df,
main="Histogram for +1 -1 Simulation",
xlab="Value of sum",
border="blue",
col="green",
xlim=c(-50,50),
las=1,
breaks=10)
hist(df,
main="Histogram for +1 -1 Simulation",
xlab="Value of Sum",
xlim=c(-50,50),
las=1,
breaks=10)
hist(df,
main="Histogram for +1 -1 Simulation",
xlab="Value of Sum",
border="black",
col="grey",
xlim=c(-50,50),
las=1,
breaks=10)
hist(df,
main="Histogram for +1, -1 Simulation",
xlab="Value of Sum",
border="black",
col="grey",
xlim=c(-50,50),
las=1,
breaks=50)
hist(df,
main="Histogram for +1, -1 Simulation",
xlab="Value of Sum",
border="black",
col="grey",
xlim=c(-50,50),
las=1,
breaks=25)
hist(df,
main="Histogram for +1, -1 Simulation",
xlab="Value of Sum",
border="black",
col="grey",
xlim=c(-50,50),
ylim=c(0,120),
las=1,
breaks=25)
hist(df,
main="Histogram for +1, -1 Simulation",
xlab="Value of Sum",
border="black",
col="grey",
xlim=c(-50,50),
ylim=c(0,100),
las=1,
breaks=25)
hist(df,
main="Histogram for +1, -1 Simulation",
xlab="Value of Sum",
border="black",
col="grey",
xlim=c(-50,50),
ylim=c(0,100),
las=1,
breaks=20)
hist(df,
main="Histogram for +1, -1 Simulation",
xlab="Value of Sum",
border="black",
col="grey",
xlim=c(-50,50),
ylim=c(0,150),
las=1,
breaks=20)
hist(df,
main="Histogram for +1, -1 Simulation",
xlab="Value of Sum",
border="black",
col="grey",
xlim=c(-50,50),
ylim=c(0,250),
las=1,
breaks=20)
hist(df,
main="Histogram for +1, -1 Simulation",
xlab="Value of Sum",
border="black",
col="grey",
xlim=c(-50,50),
ylim=c(0,100),
las=1,
breaks=25)
?replicate
unif()
dunif()
dunif(x = 100)
runif(100)
runif()
runif(1)
runif(1)
runif(1)
for (1:100) {
N1.list <- 0
N1 <- 0
if (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
} else {
N1.list <- c(N1.list, N1)
}
}
N1.list <- 0
for (1:100) {
N1 <- 0
if (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
} else {
N1.list <- c(N1.list, N1)
}
}
N1.list <- 0
for (i in 1:100) {
N1 <- 0
if (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
} else {
N1.list <- c(N1.list, N1)
}
}
N1 <- 0
if (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
for (i in 1:100) {
N1 <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
}
N1.list <- c(N1.list, N1)
}
for (i in 1:100) {
N1 <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
}
N1.list <- c(N1.list, N1)
}
for (i in 1:100) {
N1 <- 0
counter <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
counter <- counter + 1
}
N1.list <- c(N1.list, counter)
}
N1.list <- 0
for (i in 1:100) {
N1 <- 0
counter <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
counter <- counter + 1
}
N1.list <- c(N1.list, counter)
}
N1.100 / 100
N1.100 <- 0
for (i in 1:100) {
N1 <- 0
counter <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
counter <- counter + 1
}
N1.100 <- c(N1.100, counter)
}
N1.100 / 100
N1.1000 <- 0
for (i in 1:1000) {
N1 <- 0
counter <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
counter <- counter + 1
}
N1.1000 <- c(N1.1000, counter)
}
N1.1000 / 1000
N1.10000 <- 0
for (i in 1:10000) {
N1 <- 0
counter <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
counter <- counter + 1
}
N1.10000 <- c(N1.10000, counter)
}
N1.10000 / 10000
sum(N1.10000) / 10000
sum(N1.1000) / 1000
sum(N1.100) / 100
set.seed(1)
N1.100 <- 0
for (i in 1:100) {
N1 <- 0
counter <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
counter <- counter + 1
}
N1.100 <- c(N1.100, counter)
}
N1.1000 <- 0
for (i in 1:1000) {
N1 <- 0
counter <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
counter <- counter + 1
}
N1.1000 <- c(N1.1000, counter)
}
N1.10000 <- 0
for (i in 1:10000) {
N1 <- 0
counter <- 0
while (N1 < 1) {
x <- runif(1)
N1 <- N1 + x
counter <- counter + 1
}
N1.10000 <- c(N1.10000, counter)
}
sum(N1.100) / 100
sum(N1.1000) / 1000
sum(N1.10000) / 10000
N2.100 <- 0
for (i in 1:100) {
N2 <- 0
counter <- 0
while (N2 < 2) {
x <- runif(1)
N2 <- N2 + x
counter <- counter + 1
}
N2.100 <- c(N2.100, counter)
}
N2.1000 <- 0
for (i in 1:1000) {
N2 <- 0
counter <- 0
while (N2 < 2) {
x <- runif(1)
N2 <- N2 + x
counter <- counter + 1
}
N2.1000 <- c(N2.1000, counter)
}
N2.10000 <- 0
for (i in 1:10000) {
N2 <- 0
counter <- 0
while (N2 < 2) {
x <- runif(1)
N2 <- N2 + x
counter <- counter + 1
}
N2.10000 <- c(N2.10000, counter)
}
sum(N2.100) / 100
sum(N2.1000) / 1000
sum(N2.10000) / 10000
rexp(1600, 1)
X1 <- rexp(1600, rate = 1)
X2 <- rexp(1600, rate = 1)
X3 <- rexp(1600, rate = 1)
X4 <- rexp(1600, rate = 1)
X5 <- rexp(1600, rate = 1)
Y <- data.frame("X1 + X4" = X1 + X4,
"X1 + X3 + X5" = X1 + X3 + X5,
"X2 + X5" = X2 + X5
)
View(Y)
?apply
Y$max <- apply(Y, 1, max)
Y$max / nrow(Y)
sum(Y$max) / nrow(Y)
sum(N2.100) / 100
sum(N2.1000) / 1000
sum(N2.10000) / 10000
sum(N1.100) / 100
sum(N1.1000) / 1000
sum(N1.10000) / 10000
set.seed(3)
X1 <- rexp(10000, rate = 1)
X2 <- rexp(10000, rate = 1)
X3 <- rexp(10000, rate = 1)
X4 <- rexp(10000, rate = 1)
X5 <- rexp(10000, rate = 1)
Y <- data.frame("X1 + X4" = X1 + X4,
"X1 + X3 + X5" = X1 + X3 + X5,
"X2 + X5" = X2 + X5
)
# apply max function across rows, to find E[Y] for each simulation
Y$max <- apply(Y, 1, max)
# value of sample mean E[Y]
sum(Y$max) / nrow(Y)
View(Y)
Y_bar <- sum(Y$max) / nrow(Y)
Y_bar
sum((Y_bar - Y$max)^2)/nrow(Y)
var(Y$max)
sqrt(var(Y$max))
?runif
runif(1)
set.seed(1)
p = 0.4
R0 = 0
for (i in 1:1000) {
x = runif(1)
if (x < p) {
R0 = R0 + 1
} else {
R0 = R0 - 1
}
}
R0/1000
set.seed(1)
p = 0.55
R = 0
for (i in 1:1000) {
x = runif(1)
if (x < p) {
R0 = R0 + 1
} else {
R0 = R0 - 1
}
}
R0/1000
set.seed(1)
p = 0.55
R0 = 0
for (i in 1:1000) {
x = runif(1)
if (x < p) {
R0 = R0 + 1
} else {
R0 = R0 - 1
}
}
R0/1000
set.seed(1)
p = 0.5
R0 = 0
for (i in 1:1000) {
x = runif(1)
if (x < p) {
R0 = R0 + 1
} else {
R0 = R0 - 1
}
}
R0/1000
set.seed(1)
p = 0.55
R0 = 0
for (i in 1:1000) {
x = runif(1)
if (x < p) {
R0 = R0 + 1
} else {
R0 = R0 - 1
}
}
R0/1000
set.seed(1)
p = 0.4
R0 = 0
sum = 0
for (m in 1:5000) {
for (i in 1:1000) {
x = runif(1)
if (x < p) {
R0 = R0 + 1
} else {
R0 = R0 - 1
}
if (R0 == 100) {
sum = sum + 1
break
}
}
}
sum/5000
set.seed(1)
p = 0.55
R0 = 0
sum = 0
for (m in 1:5000) {
for (i in 1:1000) {
x = runif(1)
if (x < p) {
R0 = R0 + 1
} else {
R0 = R0 - 1
}
if (R0 == 100) {
sum = sum + 1
break
}
}
}
sum/5000
setwd("C:/Users/samsung/Desktop/STAT GR5243 ADS/Tutorial2")
